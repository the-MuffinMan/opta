environments:
  - name: staging
    path: "../env/opta.yml"
    variables:
      max_nodes: 2
name: service-flyte
modules:
  - name: db
    type: aws-postgres
  - name: s3
    type: aws-s3
    bucket_name: "{parent_name}-{layer_name}"
  - name: notifcationsQueue
    type: aws-sqs
  - name: schedulesQueue
    type: aws-sqs
  - name: topic
    type: aws-sns
    sqs_subscribers:
      - "${{module.notifcationsQueue.queue_arn}}"
  - name: flyterole
    type: aws-iam-role
    extra_iam_policies:
      - "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess"
      - "arn:aws:iam::889760294590:policy/live-example-live-example-awsses-sender"
    allowed_k8s_services:
      - namespace: "*"
        service_name: "*"
    links:
      - s3: ["write"]
      - notifcationsQueue
      - schedulesQueue
      - topic
  - type: helm-chart
    chart: ../../../../flyte/helm
    namespace: flyte
    create_namespace: true
    values_file: ./values-eks.yaml
    values:
      postgres:
        enabled: false
      db:
        database:
          port: 5432
          username: "${{module.db.db_user}}"
          host: "${{module.db.db_host}}"
          dbname: "${{module.db.db_name}}"
      common:
        ingress:
          host: "flyte.{parent.domain}"
          albSSLRedirect: false
          annotations:
            kubernetes.io/ingress.class: "nginx"
        databaseSecret:
          secretManifest:
            stringData:
              pass.txt: "${{module.db.db_password}}"
      storage:
        bucketName: "{parent_name}-{layer_name}"
        s3:
          region: "us-east-1"
      flyteadmin:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.flyterole.role_arn}}"
      datacatalog:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.flyterole.role_arn}}"
      flytepropeller:
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: "${{module.flyterole.role_arn}}"
      workflow_scheduler:
        enabled: true
        config:
          scheduler:
            # -- This is configured to use Cloudwatch schedules as explained [here](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/Create-CloudWatch-Events-Scheduled-Rule.html)
            eventScheduler:
              scheme: aws
              region: us-east-1
              scheduleRole: "${{module.flyterole.role_arn}}"
              targetName: "${{module.schedulesQueue.queue_arn}}"
              scheduleNamePrefix: flyte
            workflowExecutor:
              scheme: aws
              region: us-east-1
              scheduleQueueName: "${{module.schedulesQueue.queue_name}}"
              accountId: 889760294590
              reconnectAttempts: 10
              reconnectDelaySeconds: 30
      workflow_notifications:
        enabled: true
        config:
          notifications:
            type: aws
            region: us-east-1
            publisher:
              topicName: "${{module.topic.topic_arn}}"
            processor:
              queueName: "${{module.notifcationsQueue.queue_name}}"
              accountId: 889760294590
            emailer:
              subject: "Flyte: {{ project }}/{{ domain }}/{{ launch_plan.name }} has '{{ phase }}'"
              sender: "flyte@example.runx.dev"
              body: |
                Execution {{ workflow.project }}/{{ workflow.domain }}/{{ workflow.name }}/{{ name }} has {{ phase }}.
                Details: https://flyte.example.com/console/projects/{{ project }}/domains/{{ domain }}/executions/{{ name }}.
                {{ error }}
      configmap:
        remoteData:
          region: "us-east-1"
          scheme: aws
          signedUrls:
            durationMinutes: 3
      cluster_resource_manager:
        enabled: true
        config:
          cluster_resources:
            customData:
              - production:
                  - defaultIamRole:
                      value: "${{module.flyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "5"
                  - projectQuotaMemory:
                      value: "4000Mi"
              - staging:
                  - defaultIamRole:
                      value: "${{module.flyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "2"
                  - projectQuotaMemory:
                      value: "3000Mi"
              - development:
                  - defaultIamRole:
                      value: "${{module.flyterole.role_arn}}"
                  - projectQuotaCpu:
                      value: "4"
                  - projectQuotaMemory:
                      value: "3000Mi"